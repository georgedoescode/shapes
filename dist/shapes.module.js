import{polygonArea as t,polygonBounds as n,polygonCentroid as r,polygonTranslate as e,polygonRotate as i,polygonScaleX as o,polygonScaleY as u}from"geometric";import c from"offset-polygon";import f from"adaptive-quadratic-curve";import a from"adaptive-bezier-curve";import s from"polygon-clipping";import l from"simplepolygon";import h from"simplify-path";import{distanceToPolygon as v}from"distance-to-polygon";function y(t,n){var r=t[0]-n[0],e=t[1]-n[1];return Math.sqrt(r*r+e*e)}function p(t,n){for(var r=[t[0]],e=function(e){var i=t[e];r.some(function(t){return y(t,i)<=n})||r.push(i)},i=1;i<t.length;i++)e(i);return r}function g(t,n){if(0===t.length)return[];var r=[];if(isNaN(t[0][0][0])||isNaN(t[0][0][1]))for(var e=0;e<t.length;e++){var i=t[e];if(1===i.length)n?n(i[0]):r.push(i[0]);else for(var o=0;o<i.length;o++)n?n(i[o]):r.push(i[o])}else n?n(t[0]):r.push(t[0]);return r}function m(t){return JSON.parse(JSON.stringify(t))}function x(t){var r=g(t).flat(),e=n(r),i=e[0],o=e[1];return{x:i[0],y:i[1],width:o[0]-i[0],height:o[1]-i[1]}}var d=function(){function t(t,n,r){var e=n.x-t.x,i=n.y-t.y,o=r/(2*Math.sqrt(e*e+i*i));return{x:-o*i,y:o*e}}function n(t,n,r,e){var i=(n.y-t.y)/(n.x-t.x),o=(e.y-r.y)/(e.x-r.x);if(!(i===o||Math.abs(i-o)<1e-5)){var u=t.y-i*t.x,c=(u-(r.y-o*r.x))/(o-i);return{x:c,y:i*c+u}}}return function(r,e){for(var i=[],o=0;o<r.length;o++)i.push({x:(b=r[o])[0],y:b[1]});if(r=i,"[object Array]"!==Object.prototype.toString.call(e)){var u=e;for(e=[],o=0;o<r.length;o++)e.push(u)}for(var c,f,a,s,l,h,v,y,p,g,m,x,d=[],w=(o=0,r.length-1);o<w;o++)a=!o,s=o===r.length-2,c=t(r[o],r[o+1],e[o]),f=t(r[o],r[o+1],e[o+1]),p={x:r[o].x+c.x,y:r[o].y+c.y},g={x:r[o+1].x+f.x,y:r[o+1].y+f.y},m={x:r[o].x-c.x,y:r[o].y-c.y},x={x:r[o+1].x-f.x,y:r[o+1].y-f.y},a||((v=n(l[0],l[1],p,g))&&d.unshift(v),(y=n(h[0],h[1],m,x))&&d.push(y)),a&&(d.unshift(p),d.push(m)),s&&(d.unshift(g),d.push(x)),s||(l=[p,g],h=[m,x]);for(o=0;o<d.length;o++){var b;d[o]=[(b=d[o]).x,b.y]}return d.push(d[0]),d.filter(function(t){return!isNaN(t[0])&&!isNaN(t[1])})}}();function w(t,n){return d(t,n)}function b(t,n,r){void 0===r&&(r=64);for(var e=[],i=2*Math.PI/r,o=1;o<=r;o++)e.push([Math.cos(o*i)*t/2+t/2,Math.sin(o*i)*n/2+n/2]);return e.push(e[0]),[e]}function N(t,n,r){var i=x(t);null===n&&(n=i.x),null===r&&(r=i.y);var o,u,c=[i.x,i.y],f=[n,r],a=y(c,f),s=(o=c,u=f,180*Math.atan2(u[1]-o[1],u[0]-o[0])/Math.PI);return g(t,function(t){for(var n=e(t,s,a),r=0;r<n.length;r++)t[r]=n[r]}),t}function M(t,n,r){var e=x(t),i=[null===n?e.x:n-e.width/2,null===r?e.y:r-e.height/2];return N(t,i[0],i[1])}function A(t,n){(null==n||n>t.length)&&(n=t.length);for(var r=0,e=new Array(n);r<n;r++)e[r]=t[r];return e}function S(t){for(var n,r="",e=function(t,n){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(r)return(r=r.call(t)).next.bind(r);if(Array.isArray(t)||(r=function(t,n){if(t){if("string"==typeof t)return A(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?A(t,n):void 0}}(t))){r&&(t=r);var e=0;return function(){return e>=t.length?{done:!0}:{done:!1,value:t[e++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(g(t.vertices));!(n=e()).done;){var i=n.value,o="";o+="M "+i[0][0].toFixed(2)+" "+i[0][1].toFixed(2);for(var u=1;u<i.length;u++)o+="L "+i[u][0].toFixed(2)+" "+i[u][1].toFixed(2);r+=o+="Z"}return r}function O(){var t=[].slice.call(arguments).map(function(t){return t.vertices});return z(s.union.apply(s,t))}function I(){var t=[].slice.call(arguments).map(function(t){return t.vertices});return z(s.difference.apply(s,t))}function j(){var t=[].slice.call(arguments).map(function(t){return t.vertices});return z(s.xor.apply(s,t))}function F(){var t=[].slice.call(arguments).map(function(t){return t.vertices});return z(s.intersection.apply(s,t))}var q=/*#__PURE__*/function(){function n(t){this.vertices=t}var e=n.prototype;return e.x=function(t){return this.vertices=N(m(this.vertices),t,null),this},e.y=function(t){return this.vertices=N(m(this.vertices),null,t),this},e.cx=function(t){return this.vertices=M(m(this.vertices),t,null),this},e.cy=function(t){return this.vertices=M(m(this.vertices),null,t),this},e.rotate=function(t){return void 0===t&&(t=0),this.vertices=function(t,n){var r=x(t);return g(t,function(t){for(var e=i(t,n,[r.x+r.width/2,r.y+r.height/2]),o=0;o<e.length;o++)t[o]=e[o]}),t}(m(this.vertices),t),this},e.scale=function(t,n){return void 0===t&&(t=1),void 0===n&&(n=null),null===n&&(n=t),this.vertices=function(t,n,r){void 0===n&&(n=1),void 0===r&&(r=1);var e=x(t);return g(t,function(t){for(var i=o(t,n,[e.x+e.width/2,e.y+e.height/2]),c=u(i,r,[e.x+e.width/2,e.y+e.height/2]),f=0;f<c.length;f++)t[f]=c[f]}),t}(m(this.vertices),t,n),this},e.offset=function(n){return n>=1&&(this.vertices=function(n,r){void 0===r&&(r=1);var e=null;if(isNaN(n[0][0][0])||isNaN(n[0][0][1])?1===n.length&&1===n[0].length&&(e=n[0][0]):e=n[0],e){var i=function(t,n){var r=t.map(function(t){return{x:t[0],y:t[1]}}),e=!1;JSON.stringify(r[0])===JSON.stringify(r[r.length-1])&&(r=r.slice(0,r.length-1),e=!0);var i=c(r,n,0);return e&&i.push(i[0]),i.map(function(t){return[t.x,t.y]})}(e,-r),o=l({type:"Feature",geometry:{type:"Polygon",coordinates:[p(i.filter(function(t){return"number"==typeof t[0]&&"number"==typeof t[0]}),0)]}}).features.map(function(t){return t.geometry.coordinates[0]}).sort(function(n,r){return t(r)-t(n)})[0].filter(function(t){return v(t,e)>=r-1});return s.difference(n,[o])}return console.warn("Only simple polygons can have a stroke applied."),n}(m(this.vertices),n)),this},e.radius=function(t){return t>=0&&(this.vertices=function(t,n){return g(t,function(t){for(var r=function(t,n){0===n&&(n=1e-7),(t=t.map(function(t){return{x:t[0],y:t[1]}}))[0].x===t[t.length-1].x&&t[0].y===t[t.length-1].y&&(t=t.slice(0,t.length-1));for(var r=[],e=function(t,n){return Math.sqrt(Math.pow(t.x-n.x,2)+Math.pow(t.y-n.y,2))},i=function(t,n,r){return t+(n-t)*r},o=function(t,n,r){return{x:i(t.x,n.x,r),y:i(t.y,n.y,r)}},u=t.length,c=[],a=0;a<u;a++){var s=t[a],l=t[(a+1)%u],h=t[(a+2)%u],v=e(s,l),y=o(l,s,Math.min(v/2,n)/v),p=e(h,l),g=o(l,h,Math.min(p/2,n)/p);c.push([y,l,g])}for(var m=0,x=c;m<x.length;m++){var d=x[m],w=d[0],b=d[1],N=d[2];r.push.apply(r,f([w.x,w.y],[b.x,b.y],[N.x,N.y],8))}return r}(m(t),n),e=0;e<r.length;e++)t[e]=r[e]}),t}(m(this.vertices),t)),this},e.spline=function(t){return t>0&&(this.vertices=function(t,n){return g(t,function(t){for(var r=function(t,n,r){void 0===t&&(t=[]),void 0===n&&(n=1),void 0===r&&(r=!0),t[0][0]===t[t.length-1][0]&&t[0][1]===t[t.length-1][1]&&(t=t.slice(0,t.length-1)),t=function(t,n){if(t=[].concat(t),Array.isArray(t[0])||(t=t.map(function(t){return[t.x,t.y]})),n){var r=t[t.length-2],e=t[0],i=t[1];t.unshift(t[t.length-1]),t.unshift(r),t.push(e),t.push(i)}return t.flat()}(t,r);var e=[],i=t.length,o=i-4;e.push([r?t[2]:t[0],r?t[3]:t[1]]);for(var u=r?i-4:i-2,c=n,f=r?2:0;f<u;f+=2){var s=f?t[f-2]:t[0],l=f?t[f-1]:t[1],h=t[f+0],v=t[f+1],g=t[f+2],m=t[f+3];n=y([h,v],[g,m])<8?1e-4:c,e.push.apply(e,a([h,v],[h+(g-s)/6*n,v+(m-l)/6*n],[g-((f!==o?t[f+4]:g)-h)/6*n,m-((f!==o?t[f+5]:m)-v)/6*n],[g,m],8))}return p(e,0)}(m(t),n,!0),e=0;e<r.length;e++)t[e]=r[e]}),t}(m(this.vertices),t)),this},e.simplify=function(t){return void 0===t&&(t=16),this.vertices=function(t,n){return g(t,function(t){var e,i,o=h(m(t),n),u=function(t){var n=g(t).flat();return r(n)}([t]);t.splice(o.length,t.length-o.length);for(var c=0;c<o.length;c++)t[c]=[(e=o[c])[0]+=0*((i=u)[0]-e[0]),e[1]+=0*(i[1]-e[1])];t[t.length-1]=t[0]}),t}(m(this.vertices),t),this},e.checkIntersection=function(t,n,r){var e=this;void 0===n&&(n=1),void 0===r&&(r=0);try{return!!(t.some(function(t){return!!F(t.clone().simplify(r),e.clone().simplify(r)).vertices[0]})||t.some(function(t){return!!F(t.clone().simplify(r),e.clone().scale(1*n).simplify(r)).vertices[0]})||t.some(function(t){return!!F(t.clone().simplify(r),e.clone().scale(1/n).simplify(r)).vertices[0]}))}catch(t){return!0}},e.getBounds=function(){return x(this.vertices)},e.getArea=function(){return function(n){var r=g(n).flat();return t(r)}(this.vertices)},e.clone=function(){return new n(m(this.vertices))},e.buildPath=function(){return S(this.clone())},n}();function J(t,n){var r=function(t,n){return[[[0,0],[t,0],[t,n],[0,n],[0,0]]]}(t,n);return new q(r)}function P(t,n,r){var e=b(t,n,r);return new q(e)}function k(t,n){var r=b(t,t,n);return new q(r)}function z(t){return new q(t)}function B(t,n){var r=function(t,n){return void 0===n&&(n=1),[w(t,n)]}(t,n);return new q(r)}function C(t,n,r,e,i){var o=function(t,n,r,e,i){return void 0===e&&(e=1),void 0===i&&(i=8),[w(f(t,n,r,i),e)]}(t,n,r,e,i);return new q(o)}export{S as buildPath,k as circle,I as difference,P as ellipse,F as intersection,B as line,z as polygon,C as quadtratic,J as rect,O as union,j as xor};
//# sourceMappingURL=shapes.module.js.map
